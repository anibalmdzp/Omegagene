===========================================
tutorial for multi-canonical MD (McMD) simulations
===========================================

All the data required for this tutorial is in the directory "samples/mcmd_ala3".

---------
cal01_inp
---------

- ala3.pdb ... The initial structure.
- ala3.shk ... SHAKE definition file.
- ala3.tpl ... Topology file.
- atom_groups.inp ... Atom group definition file.

This sample system is consisting of three Ace-Ala-Nme peptide molecules surrounded by water molecules.
 
---------
cal02_nvt
---------

NVT simulations to prepare initial conformaions of McMD.
In this directoly, 10 successive NVT simulations will be performed.
First, the initial atomic velocities are generated by the following command. 

::

  $python2.7 ${OMEGATK}/presto_generate_velocities.py
    -i ../cal01_inp/ala3.pdb
    --i-tpl ../cal01_inp/ala3.tpl
    -t 600f
    -o run00000_o.restartf
    -s ${RANDOM}
    â€”mol --i-shk ../cal01_inp/ala3.shk

${RANDOM} means the random seed. Define the variable ${RANDOM} or replace it into digits.

Then, simulations are performed by executing *run.bash*.
Variables *OMEGAROOT*, *OMEGABIN*, and *OMEGATK* should be changed depending on your environment.

- OMEGAROOT ... the install directory of omegagene.
- OMEGABIN  ... the executable binary of omegagene.
- OMEGATK   ... the toolkit directory of omegagene.
  
*run.inp* and *run.system* are the templates of input files for each simulation.
run00001.inp, run00002.inp, ...., and run00001.system, run00002.system, ... will be generated by *run.bash*.

After that, restart files recording the final snap shot of each of the 10 runs are converted into .pdb files.

::
   $bash rst_to_pdb.bash

   
cal03_mcmd_inp

*_kkmcmdconf.txt* file is the configuration file for the McMD.

::
  --mode               celeste
  --job-script         ${PRJ_HOME}/cal03_mcmd_inp/job.bash
  --project-log        ${PRJ_HOME}/kkmcmd.log
  --filename-stem      md
  --project-name       ala
  --project-home       /gs/hs0/hp170025/kasahara/cal/md_bench/ph02_celeste/st24_mcmd_ala3
  --n-digit-run-id     5
  --cell-size          39.7098 39.7098 39.7098
  --random-seed        16102812
  --inp-topology       ${PRJ_HOME}/cal01_inp/ala3.tpl
  --inp-shake          ${PRJ_HOME}/cal01_inp/ala3.shk
  --inp-ttp            ttp_v_mcmd.inp
  --out-ttp            ttp_v_mcmd.out
  --inp-vert           start.vert
  --out-mc-ene         mult.ene
  --n-trivial-parallel-mpi 1
  --job-script-mpi  ${PRJ_HOME}/cal03_mcmd_inp/job_mpi.bash

  ; settings phase=0
  --cal-dir        ${PRJ_HOME}/cal03_mcmd_inp

  ; prerun phase=1
  --cal-dir        ${PRJ_HOME}/cal04_mcmd1
  --prerun-init        ${PRJ_HOME}/cal02_nvt/run 1 1 10
  --prerun-force-coef  0.8  0.1  10
  --prerun-md-init-template    ${PRJ_HOME}/cal04_mcmd1/md.inp
  --prerun-md-inp-template    ${PRJ_HOME}/cal04_mcmd1/md.inp.run
  --prerun-ttp-inp-template   ${PRJ_HOME}/cal04_mcmd1/pre_ttp.inp.tmpl

File paths and cell sizes should be adjusted depending on you environment and you system.

The lines under "; prerun phase=1" set configulation of pre-run of McMD performed in the *cal04_mcmd1* directory.
In this phase, 10 succsessive runs are performed for 10 independent series of runs (10 * 10 = 100 simulations are performed).
During the successive runs, the strength of biasing potential is gradually weakens.

The file *job.bash* is a shell script for execution of omegagene.
Edit this file to specifies the path to the binary of omegagene.

-----------
cal04_mcmd1
-----------

The following files are input configuration files.

- md.inp
- md.inp.run
- pre_ttp.inp.tmpl

The following command generates inputs of 10 independent runs.

::
  $alias mcmd="python cal03_mcmd_inp/kkmcmd_job_control.py -i cal03_mcmd_inp/_kkmcmdconf.txt"
  $mcmd

This command will be repeatedly executed during the iterations of McMD simulations.

In *cal04_mcmd1/1* directory, n1, n2, ..., n10 are generated.

Then, execute *job.bash* in each of n*X* directories.
After ending of all the 10 runs, execute *mcmd* command twice.

::
  $mcmd
  $mcmd


In *cal04_mcmd1/2* directory, n1, n2, ..., n10 are generated.

Repeat this process 10 times.

Finally, execute the script *gen_ttpvout.bash*.

::
  $bash gen_ttpvout.bash


---------------------------------------
for_next  ;  postprocess of cal04_mcmd1
---------------------------------------

After ending the *cal04_mcmd1/10*, the initial guess of the density of states is calculated by using *for_next* directory.
Edit the text file *for_next/current_situation*.

::
  4
  1
  1
  60

The first line indicates the phase; 4 indicates cal04_mcmd1.
The second line is the number of virtual states. This value is 1 for cal04_mcmd1.
The remaining two lines are not used in the current version.

Next move to the directory *for_next/v_distrib/cal04_mcmd1_pre*.
Excecute the following command.

::
  $bash com.bash 10 10 5

Note the minimum and maximum energies.

::
  $tail -n1 stg_1/v_pdf/s1.pdf
  -1.4130000e+04   -1.2206073e+01
  $head -n1 stg_10/v_pdf/s1.pdf
  -1.9970000e+04   -1.2899220e+01

The first value is the energy (kcal/mol), and the second value is log probability.

Edit the text file *range.info* to input these minimum and maximum energeis at the first line.

::
  $python2.7 gen_mcmdinp.py -i range.info -o ttp_v_mcmd.inp
  $cp ttp_v_mcmd.inp ../../../cal04_mcmd1

Execute the following program again.

::
   $bash com.bash 10 10 5

Then, move to the directory *derv_den_Pc*.
Execute the command

::
   $cd ../../derv_de_Pc
   $csh com

When the follwing text appears, input "1" by your keyboard.

::
  nstage =  10
  ####  If OK, input 1. #### 

If ifort is not in your environment, "ifort: Command not found." appears.
Edit *com* to replace ifort into your fortran compiler.

Move to the directory *fit_dden*,
Edit the *cal04_mcmd1/inp.dat_e1* to specify the minimum and maximum potential energies as the same way for *range.info* which was editted above.

::
  emacs -nw  cal04_mcmd1/inp.dat_e1

::
  -19970.0   5.0    999.0  0.0 3 0.0
  -19970.0  -14130.0   -19970.0  -14130.0
  -19970.0  -14130.0

Execute the command

::
  $csh com_pre

When the follwing text appears,	input "1" by your keyboard.
::
  This is specialized for md1_*.  Are you OK?
  
  ####  If OK, input 1. ####


The file *e1_fort.20* will be generated. This file describes the parameters for McMD.
By using this file, the input files for the next iteration will be prepared.

------------
cal05_mcmd1
------------

The directory for the next iteration *cal05_mcmd1* should be copied from the *samples/mcmd_ala3* directory of the omegagene repository.

::
   cd ../../
   cp OMEGAGENE_REPOSITORY_DIR/samples/mcmd_ala3/cal05_mcmd1 . -r

The McMD parameter file *cal05_mcmd1/ttp_v_mcmd.inp* is prepared by adding the content of *e1_fort.20* to the tail of *cal04_mcmd1/ttp_v_mcmd.inp*. See the sample file, *samples/mcmd_ala3/cal05_mcmd1/ttp_v_mcmd.inp*.
In this file, there are nine copies of the content of *e1_fort.20*, because this sample simulation configured to use the nine virtual states.

The next iteration is defined in  *cal03_mcmd_inp/_kkmcmdconf.txt*

::
  ; cal05_mcmd1 phase=2
  --cal-dir        ${PRJ_HOME}/cal05_mcmd1
  --mcmd-stages              2  1
  --mcmd-inp-ttp             2 ${PRJ_HOME}/cal05_mcmd1/ttp_v_mcmd.inp
  --mcmd-md-inp-template     2 ${PRJ_HOME}/cal05_mcmd1/md.inp.run
  --mcmd-md-init-template    2 ${PRJ_HOME}/cal05_mcmd1/md.inp
  --mcmd-init                2  1:1:1     1:1:2    1:1:3   1:1:4    1:1:5
  --mcmd-init                2  1:1:6     1:1:7    1:1:8   1:1:9   1:1:10

To run the simulation, execute the *mcmd* command.
   
::
  $mcmd
  $mcmd

Then, execute *job.bash* in each of cal05_mcme1/1/nX directories, where X is one of 1-10.

------------------------------------
Postprocessing of cal05_mcmd1
------------------------------------

After finishing the simulations, post-processing will be done in *for_next* directory.

::
  for_next

Edit the first two lines of *current_situation* as follows

::
  5
  9
  1
  60

::
  cd v_distrib/cal05_mcmd1

Edit the *com_pre.bash* to set the variable OMEGATK to your omegagene toolekit directory.

::
  OMEGATK=${HOME}/local/og0/toolkit

Then, execute the script.

::
  csh ./com_pre.bash 1 10

Argument 1 and 10 indicates the number of runs.
The histogram of populations for each potential energy bin for each virtual state is generated in *v_pdf* directory.
If *R* is working, the image file *v_distrib.png* is generated.

After that, Run the following scripts.

::
  cd ../../fit_pmc_entire
  csh ./1234_com 4 7 0

::
  cd ../
  csh do_fitmix_nextpre.csh 7 0 

The directory *cal06_mcmd1* will be generated in the parent directory.
Run this iteration in the same way as the previous iteration.

Repeat the iterations till the converge the distribution obtained in *v_distrib* directory.
From the *cal06_mcmd1*, use *do_fitmix_iter.csh* instead of *do_fitmix_nextpre.csh*.

After convergence of the distribution, perform a production run.

Reweigthing of the production run is performed *for_next/gen_p_cano_McMD* directory.
Edit *md_vst* file as follows.

::
  14
  9
  5.0

The first line is the number of iterations.
If the production run is *cal15_mcmd1*, input *14* here.
The second line is the number of virtual states.
The third line is bin for the potential energy in kcal/mol unit.

::
  csh 1_com
  csh 2_com_integ
  csh 3_com_P_E_T

Then, the potential energies of each snapshot in the trajectory are obtained by the following script.

::
  python2.7 ${OMEGATK}/kkmcmd_pot_from_crd.py \
      --cod md.cod
      -o    pot.txt

*md.cod* is a trajectory file generated by omegagene.
*pot.txt* is output file.

The probability of existance in the canonical ensemble is obtained by the following scripts.

::
  echo pot.txt > list.txt
  python2.7 ${OMEGATK}/kkmcmd_reweighting.py \
    --flg-pot -i pot.txt \
    --i-cano for_next/gen_p_cano_McMD/p_cano/P_E_T300.dat \
    -o prob.txt 

